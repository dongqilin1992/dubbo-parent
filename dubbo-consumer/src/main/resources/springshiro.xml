<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">
    <bean id="shiroSecurityFilter"
          class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro 的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登陆成功后要跳转的连接 -->
        <property name="successUrl" value="/index"/>
        <!-- 未授权时要跳转的连接 -->
        <property name="unauthorizedUrl" value="/refuse"/>
        <property name="filters">
            <util:map>
                <!--<entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>-->
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
        </property>
        <!-- shiro 连接约束配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 退出拦截，请求logout.action执行退出操作 -->
                /logout.action = logout
                <!-- 无权访问页面 -->
                /refuse.jsp = anon
                <!-- roles[XX]表示有XX角色才可访问 -->
                /item/list.action = roles[item],authc
                /js/** anon
                /images/** anon
                /styles/** anon
                /validatecode.jsp anon
                /item/* authc
                <!-- user表示身份认证通过或通过记住我认证通过的可以访问 -->
                /** = authc
            </value>
        </property>
    </bean>
    <!-- 无状态 token Realm实现 -->
   <!-- <bean id="statelessRealm" class="com.dongqilin.shiro.StatelessRealm"/>-->
    <!-- 自定义 realm -->
    <bean id="userRealm" class="com.dongqilin.shiro.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>
    <!-- Subject工厂 -->
    <!--<bean id="subjectFactory" class="com.dongqilin.shiro.StatelessDefaultSubjectFactory"/>-->
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <!--<property name="sessionValidationSchedulerEnabled" value="false"/>-->
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
    <!-- 安全管理器 -->
    <bean id="securityManager"
          class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 单realm应用。如果有多个realm，使用‘realms’属性代替 -->
        <property name="realm" ref="userRealm"/>
        <property name="cacheManager" ref="cacheManager"/>
       <!-- <property name="subjectFactory" ref="subjectFactory"/>-->
        <property name="sessionManager" ref="sessionManager"/>
        <!-- 记住我 -->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    <!--<bean id="statelessAuthcFilter" class="com.dongqilin.shiro.StatelessAuthcFilter"/>-->
    <!-- rememberMeManager管理器 -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>-->
    <!-- 会话 Cookie 模板 -->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>-->
    <!-- 记住我cookie -->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        &lt;!&ndash; 记住我cookie生效时间30天 &ndash;&gt;
        <property name="maxAge" value="2592000"/>
    </bean>-->
    <!-- rememberMe 管理器 -->
    <!--<bean id="rememberMeManager"
          class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="
#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>-->
    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:shiroehcache.xml"/>
    </bean>
    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--<bean
            class="org.springframwork.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor"/>
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdv
isor"/>-->
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="1" />
    </bean>
    <!-- 基于 Form 表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login.jsp"/>
    </bean>
</beans>